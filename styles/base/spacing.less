@space: @base-space-unit;
@space-qtr: @space / 4;
@space-half: @space / 2;
@space-1: @space + @space-qtr;
@space-2: @space * 2;
@space-3: @space * 3;
@space-4: @space * 4;
@space-5: @space * 5;
@space-6: @space * 6;
@space-7: @space * 7;
@space-8: @space * 8;
@space-9: @space * 9;
@space-10: @space * 10;

@props: margin spc, padding pad;
@spacers: half @space-half @space-half, 1 @space @space, 2 @space-2 @space-2;

.loop-props(@prop-index) when (@prop-index > 0) {
  & when (@build-spacing = 'yes') {
    @prop: extract(@props, @prop-index);
    @prop-name: extract(@prop, 1);
    @abbrev: extract(@prop, 2);

    .loop-sizes(@prop-name; @abbrev; length(@spacers));
    .loop-props(@prop-index - 1);
  }
}

.loop-props(length(@props));
.loop-sizes(@prop-name; @abbrev; @size-index) when (@size-index > 0) {
  @spacer: extract(@spacers, @size-index);
  @size: extract(@spacer, 1);
  @x: extract(@spacer, 2);
  @y: extract(@spacer, 3);

  .@{abbrev}-@{size} { @{prop-name}: @y @x;  }
  .@{abbrev}-top-@{size} { @{prop-name}-top: @y; }
  .@{abbrev}-right-@{size} { @{prop-name}-right: @x; }
  .@{abbrev}-bottom-@{size} { @{prop-name}-bottom: @y; }
  .@{abbrev}-left-@{size} { @{prop-name}-left: @x; }
  .@{abbrev}-x-@{size} { @{prop-name}-right: @x; @{prop-name}-left: @x; }
  .@{abbrev}-y-@{size} { @{prop-name}-top: @y; @{prop-name}-bottom: @y; }

  .loop-sizes(@prop-name; @abbrev; @size-index - 1);
}